#!/bin/bash
#
# This Source Code Form is subject to the terms of the Mozilla Public
# License, v. 2.0. If a copy of the MPL was not distributed with this
# file, You can obtain one at http://mozilla.org/MPL/2.0/.
#

#
# Copyright (c) 2014, Joyent, Inc.
#

# coal-vmware-setup: sets up VMWare Fusion networking on a Mac so
#                    you can use CoaL (Cloud on a Laptop).
#
# Mac OS X 10.9.5 & VMware Fusion 7.0.0 are the most recent versions
# developed for.

if [[ -n "$TRACE" ]]; then
    export PS4='[\D{%FT%TZ}] ${BASH_SOURCE}:${LINENO}: ${FUNCNAME[0]:+${FUNCNAME[0]}(): }'
    set -o xtrace
fi
set -o errexit
set -o pipefail


if [[ "$(uname -s)" != "Darwin" ]]; then
    echo "error: This bash script is written for Mac OS X." >&2
    exit 1
fi

if [[ $UID -ne 0 ]]; then
    echo "error: This script must be run as root. Run again using:" >&2
    echo "    sudo bash $0" >&2
    exit 1
fi


if [[ -e "/Library/Application Support/VMware Fusion/boot.sh" ]]; then
    echo "error: Fusion 3 is no longer supported." >&2
    exit 1
fi

# Fusion 7. Fusion 6 is untested.
BIN_DIR="/Applications/VMware Fusion.app/Contents/Library"
SETTINGS_DIR="/Library/Preferences/VMware Fusion"
# Detect if Fusion 4 or 5
if [[ -e "/Applications/VMware Fusion.app/Contents/Library/services.sh" ]]; then
    BIN_DIR="/Applications/VMware Fusion.app/Contents/Library"
    SETTINGS_DIR="/Library/Preferences/VMware Fusion"
    FUSION4_5=true
fi


VM_LIST=$("$BIN_DIR/vmrun" list)
if [[ "$VM_LIST" != "Total running VMs: 0" ]]; then
    printf "You have virtual machines running."
    printf " Please shut them down and rerun $0."
    exit 1
fi


# The admin "host-only" network - vmnet1 (only between the Mac and the headnode)
ADMIN_NETWORK=10.99.99.0
ADMIN_NETMASK=255.255.255.0
ADMIN_MAC_IP=$(echo ${ADMIN_NETWORK} | sed 's/\.[0-9]*$/.254/')

# The external NAT network - vmnet8 (can reach the internet)
# Note: There isn't currently an "external_network" var in config.coal to use.
EXTERNAL_NETWORK=10.88.88.0
EXTERNAL_NETMASK=255.255.255.0
EXTERNAL_MAC_IP=10.88.88.1

echo INPUT from $0 file:
echo "Admin network:    network=\"${ADMIN_NETWORK}\", mac ip=\"${ADMIN_MAC_IP}\", netmask=\"${ADMIN_NETMASK}\""
echo "External network: network=\"${EXTERNAL_NETWORK}\", mac ip=\"${EXTERNAL_MAC_IP}\", netmask=\"${EXTERNAL_NETMASK}\""


cd "$SETTINGS_DIR"


NET_TMP=/tmp/coal.networking.$$
cat networking | (grep -ve 'VNET_[18]' || true) > $NET_TMP
cat >> $NET_TMP <<__NETWORKING__
answer VNET_1_DHCP no
answer VNET_1_HOSTONLY_NETMASK $ADMIN_NETMASK
answer VNET_1_HOSTONLY_SUBNET $ADMIN_NETWORK
answer VNET_1_NAT no
answer VNET_1_VIRTUAL_ADAPTER yes
answer VNET_1_VIRTUAL_ADAPTER_ADDR $ADMIN_MAC_IP
answer VNET_8_DHCP yes
answer VNET_8_DHCP_CFG_HASH 889DD78A4E0F3E1F68AB5418242607E2B4A060B7
answer VNET_8_HOSTONLY_NETMASK $EXTERNAL_NETMASK
answer VNET_8_HOSTONLY_SUBNET $EXTERNAL_NETWORK
answer VNET_8_NAT yes
answer VNET_8_VIRTUAL_ADAPTER yes
answer VNET_8_VIRTUAL_ADAPTER_ADDR $EXTERNAL_MAC_IP
__NETWORKING__

cp networking networking.pre_coal.$(date +%s)
echo OLD networking settings backed up:
echo     $SETTINGS_DIR/networking.pre_coal.$(date +%s)

mv $NET_TMP networking
echo UPDATED networking settings:
echo $SETTINGS_DIR/networking


if [[ -e locations ]]; then
    # locations file doesn't exist in Fusion 7. Fusion 6 is untested.
    LOCATIONS_TMP=/tmp/coal.locations.$$
    cat locations | (grep -ve 'VNET_[18]' || true) > $LOCATIONS_TMP
    cat >> $LOCATIONS_TMP <<__LOCATIONS__
remove_answer VNET_1_HOSTONLY_HOSTADDR
remove_answer VNET_1_HOSTONLY_NETMASK
answer VNET_1_HOSTONLY_HOSTADDR $ADMIN_MAC_IP
answer VNET_1_HOSTONLY_NETMASK $ADMIN_NETMASK
remove_answer VNET_1_DHCP
answer VNET_1_DHCP no
remove_answer VNET_8_HOSTONLY_HOSTADDR
remove_answer VNET_8_HOSTONLY_NETMASK
answer VNET_8_HOSTONLY_HOSTADDR $EXTERNAL_MAC_IP
answer VNET_8_HOSTONLY_NETMASK $EXTERNAL_NETMASK
remove_answer VNET_8_NAT
answer VNET_8_NAT yes
remove_answer VNET_8_DHCP
answer VNET_8_DHCP yes
__LOCATIONS__

    cp locations locations.pre_coal.$(date +%s)
    echo OLD locations settings backed up to the following file:
    echo     $SETTINGS_DIR/locations.pre_coal.$(date +%s)

    mv $LOCATIONS_TMP locations
    echo UPDATED locations settings:
    echo $SETTINGS_DIR/locations
fi


if [[ $(ps axo command | grep "Fusion$") ]]; then
    echo RESTARTING VMware services...
    if [[ -n "$FUSION4_5" ]]; then
        "$BIN_DIR/services.sh" --stop
        "$BIN_DIR/services.sh" --start
    else 
        # Fusion 7. Fusion 6 is untested.
        "$BIN_DIR/vmnet-cli" --configure
        "$BIN_DIR/vmnet-cli" --stop
        "$BIN_DIR/vmnet-cli" --start 
    fi
fi

# If we're running before VMWare is run for the first time, the previous step
# will have created a preference file as root, so fix it:
chown -R $SUDO_UID:$SUDO_GID "/Users/$SUDO_USER/Library/Preferences/VMWare Fusion"

echo DONE. Fusion is ready for CoaL.
